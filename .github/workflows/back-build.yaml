name: Back Build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

env:
  HUSKY: 0
  BACK_FOLDER: ./back

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Go
        uses: ./.github/actions/setup-go

      - name: Install dependencies
        working-directory: ${{ env.BACK_FOLDER }}
        run: go mod download

  lint:
    name: Lint code
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Go
        uses: ./.github/actions/setup-go

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Run linter
        working-directory: ${{ env.BACK_FOLDER }}
        run: golangci-lint run ./...

  test:
    name: Test
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Go
        uses: ./.github/actions/setup-go

      - name: Run tests
        working-directory: ${{ env.BACK_FOLDER }}
        run: go test -v ./... -race -coverprofile=coverage.txt -covermode=atomic

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ${{ env.BACK_FOLDER }}/coverage.txt
          flags: backend

  build:
    name: Build
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Go
        uses: ./.github/actions/setup-go

      - name: Build
        working-directory: ${{ env.BACK_FOLDER }}
        run: go build -v ./...
